// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// npx prisma migrate dev --name init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String
  password String
  email String @unique
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  session Session[]
  posts Post[]
  comments Comment[]
}

model Session {
  id Int @id @default(autoincrement())
  token String
  user_id Int
  user User @relation(fields: [user_id], references: [id])
  expires_at DateTime
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model Post {
  id Int @id @default(autoincrement())
  user_id Int
  user User @relation(fields: [user_id], references: [id])
  title String
  description String
  image_url String
  views_count Int @default(0)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  comments Comment[]
  likeds Liked[]
  dislikeds Disliked[]
}

model Comment {
  id Int @id @default(autoincrement())
  user_id Int
  user User @relation(fields: [user_id], references: [id])
  post_id Int
  post Post @relation(fields: [post_id], references: [id], onDelete: Cascade)
  description String
  deleted Boolean @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model Liked {
  id Int @id @default(autoincrement())
  user_id Int
  post_id Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  post Post @relation(fields: [post_id], references: [id], onDelete: Cascade)
}

model Disliked {
  id Int @id @default(autoincrement())
  user_id Int
  post_id Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  post Post @relation(fields: [post_id], references: [id], onDelete: Cascade)
}